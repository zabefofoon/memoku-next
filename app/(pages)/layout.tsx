import type { Metadata } from 'next'
import { Noto_Sans_KR } from 'next/font/google'

import '@/app/assets/styles/globals.scss'
import etcUtil from '@/app/utils/etc.util'
import { COOKIE_THEME } from '@/const'
import { cookies } from 'next/headers'
import { AppAside } from '../components/AppAside'
import AppBottomAppBar from '../components/AppBottomAppBar'
import { AppTopAppBar } from '../components/AppTopAppBar'
import { EnsureProviders } from '../components/EnsureProviders'
import FloatingButtons from '../components/FloatingButtons'

const notoSansKr = Noto_Sans_KR({
  weight: ['400', '700', '900'],
  subsets: ['latin'],
})

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default async function RootLayout(props: LayoutProps<'/'>) {
  const cookieStore = await cookies()
  const isDarkMode = cookieStore.get(COOKIE_THEME)?.value === 'dark'
  const isExpandAside = cookieStore.get('x-expand-aside')?.value === 'true'

  return (
    <html
      lang='en'
      className={etcUtil.classNames(['h-full', { dark: isDarkMode }])}>
      <body
        className={`${notoSansKr.className} antialiased | h-full | text-slate-800 dark:text-white/95 | bg-gray-100 dark:bg-zinc-900`}>
        <EnsureProviders isDarkMode={isDarkMode}>
          <div className='relative | h-full | flex flex-col sm:flex-row sm:gap-[36px] sm:p-[24px] sm:pr-[0]'>
            <AppTopAppBar />
            <AppAside isExpand={isExpandAside} />
            <main
              id='scroll-el'
              className='relative z-[1] | w-full h-full overflow-auto flex-1 sm:pr-[24px] pb-[4px]'>
              <div className='flex flex-col flex-1 min-h-full sm:h-full | p-[16px] sm:p-[0px]'>
                {props.children}
              </div>
              <FloatingButtons />
              <AppBottomAppBar />
            </main>
          </div>
        </EnsureProviders>
      </body>
    </html>
  )
}
